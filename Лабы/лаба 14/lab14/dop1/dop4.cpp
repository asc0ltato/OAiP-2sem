//4. Дан массив из 15 целых чисел на отрезке[-5; 5].Упорядочить массив, удалив повторяющиеся элементы.

#include <iostream>
#include <ctime>
using namespace std;

//Определение границы между двумя подмассивами, которые будут рекурсивно сортироваться в функции sortHoar
int getHoarBorder(int A[], int sm, int em)
{
	int i = sm - 1, j = em + 1;
	int brd = A[sm]; //грань Хаора (границы разделения)
	int buf;
	while (i < j) //проходы по массиву влево и вправо, чтобы найти элементы, которые нужно поменять местами
	{
		while (A[--j] > brd);
		while (A[++i] < brd);
		if (i < j)
		{
			buf = A[j]; //найденные элементы меняются местами, пока проходы не сойдутся в середине массива
			A[j] = A[i];
			A[i] = buf;
		};
	}
	return j; //возвращает индекс, кот делит массив на две части: элементы < brd находятся слева от него, а элементы >= brd - справа
}

//Разделяет массив на две части и сортируя каждую из них рекурсивно (в порядке возрастания)
int* sortHoar(int A[], int sm, int em)
{
	if (sm < em)
	{
		int hb = getHoarBorder(A, sm, em);
		sortHoar(A, sm, hb);
		sortHoar(A, hb + 1, em);
	}
	return A;
};

//Функция удаляет повторяющиеся элементы из массива
int repeat(int A[], int n)
{
	for (int i = 0; i < n; i++) // проход по всем парам элементов в массиве 
		for (int j = i+1; j < n; j++)
		{
			if (A[i] == A[j]) // если находятся пара равных элементов
			{
				for (int k = j; k < n - 1; k++) //удаляет один из них путем сдвига всех последующих элементов на одну позицию влево
					A[k] = A[k + 1];
				n--;
				j--;
			}
		}
	return n; //возвращание новой длины массива после удаления
}

//Функция заполняет массив случайными числами от -5 до 4 и выводит их на экран
void fill(int n, int a[])
{
	srand(time(NULL));
	cout << "\nИсходный массив: ";
	for (int i = 0; i < n; i++)
	{
		a[i] = rand() % 10-5;
		cout << a[i] << "  ";
	}
}

//Функция выводит содержимое массива на экран
void print(int n, int a[])
{
	for (int i=0; i < n; i++)
	{
		cout << a[i] << "  ";
	}
	cout << endl;
}

int main()
{
	setlocale(LC_CTYPE, "Russian");
	int n;
	int B[100];
	cout << "Введите длину массива: "; cin >> n;

	fill(n, B); //заполнение случайными числами массива В
	n=repeat(B,n); //удаление повторяющихся элементов
	cout << "\nИсходного массива после удаления повторяющихся элементов: ";
	print(n, B); 
    sortHoar(B, 0, n-1); //сортировка
	cout << "Отсортированный массив: ";
	print(n, B); 
	cout << endl;

	return 0;
}